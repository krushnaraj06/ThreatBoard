import React from 'react';
import { Upload, TrendingUp, AlertTriangle, Shield, Activity } from 'lucide-react';

const VulnerabilitySidebar = ({ activeTab, onTabChange, totalVulnerabilities, severityCounts }) => {
  const tabs = [
    {
      id: 'upload',
      label: 'Upload Scanner',
      icon: Upload,
      description: 'Upload and analyze scanner output'
    },
    {
      id: 'news',
      label: 'Latest News',
      icon: TrendingUp,
      description: 'Latest CVE updates from NVD'
    }
  ];

  const getSeverityColor = (severity) => {
    switch (severity) {
      case 'Critical': return 'text-red-600 bg-red-50';
      case 'High': return 'text-orange-600 bg-orange-50';
      case 'Medium': return 'text-yellow-600 bg-yellow-50';
      case 'Low': return 'text-green-600 bg-green-50';
      default: return 'text-gray-600 bg-gray-50';
    }
  };

  return (
    <div className="w-64 bg-white shadow-sm border-r border-gray-200 flex flex-col">
      {/* Header */}
      <div className="p-6 border-b border-gray-200">
        <div className="flex items-center mb-4">
          <Shield className="h-8 w-8 text-primary-600 mr-3" />
          <h2 className="text-lg font-semibold text-gray-900">Navigation</h2>
        </div>
        
        {/* Total Vulnerabilities */}
        <div className="bg-gray-50 rounded-lg p-4">
          <div className="flex items-center justify-between">
            <span className="text-sm font-medium text-gray-700">Total Vulnerabilities</span>
            <span className="text-2xl font-bold text-primary-600">{totalVulnerabilities}</span>
          </div>
        </div>
      </div>

      {/* Navigation Tabs */}
      <div className="flex-1 p-4">
        <nav className="space-y-2">
          {tabs.map((tab) => {
            const Icon = tab.icon;
            const isActive = activeTab === tab.id;
            
            return (
              <button
                key={tab.id}
                onClick={() => onTabChange(tab.id)}
                className={`w-full text-left p-4 rounded-lg transition-all duration-200 ${
                  isActive
                    ? 'bg-primary-50 border border-primary-200 text-primary-700'
                    : 'hover:bg-gray-50 text-gray-700 hover:text-gray-900'
                }`}
              >
                <div className="flex items-center mb-2">
                  <Icon className={`h-5 w-5 mr-3 ${
                    isActive ? 'text-primary-600' : 'text-gray-400'
                  }`} />
                  <span className="font-medium">{tab.label}</span>
                </div>
                <p className={`text-sm ${
                  isActive ? 'text-primary-600' : 'text-gray-500'
                }`}>
                  {tab.description}
                </p>
              </button>
            );
          })}
        </nav>
      </div>

      {/* Severity Breakdown */}
      {totalVulnerabilities > 0 && (
        <div className="p-4 border-t border-gray-200">
          <h3 className="text-sm font-medium text-gray-700 mb-3">Severity Breakdown</h3>
          <div className="space-y-2">
            {Object.entries(severityCounts).map(([severity, count]) => (
              count > 0 && (
                <div key={severity} className="flex items-center justify-between">
                  <div className="flex items-center">
                    <div className={`w-3 h-3 rounded-full mr-2 ${
                      severity === 'Critical' ? 'bg-red-500' :
                      severity === 'High' ? 'bg-orange-500' :
                      severity === 'Medium' ? 'bg-yellow-500' :
                      'bg-green-500'
                    }`} />
                    <span className="text-sm text-gray-600">{severity}</span>
                  </div>
                  <span className={`text-sm font-medium px-2 py-1 rounded-full ${
                    getSeverityColor(severity)
                  }`}>
                    {count}
                  </span>
                </div>
              )
            ))}
          </div>
        </div>
      )}

      {/* Quick Actions */}
      <div className="p-4 border-t border-gray-200">
        <h3 className="text-sm font-medium text-gray-700 mb-3">Quick Actions</h3>
        <div className="space-y-2">
          <button className="w-full text-left p-3 rounded-lg hover:bg-gray-50 transition-colors duration-200">
            <div className="flex items-center">
              <Activity className="h-4 w-4 text-gray-400 mr-2" />
              <span className="text-sm text-gray-600">Generate Report</span>
            </div>
          </button>
          <button className="w-full text-left p-3 rounded-lg hover:bg-gray-50 transition-colors duration-200">
            <div className="flex items-center">
              <AlertTriangle className="h-4 w-4 text-gray-400 mr-2" />
              <span className="text-sm text-gray-600">Risk Assessment</span>
            </div>
          </button>
        </div>
      </div>

      {/* Footer */}
      <div className="p-4 border-t border-gray-200">
        <div className="text-center">
          <p className="text-xs text-gray-500">
            ThreatBoard v1.0
          </p>
          <p className="text-xs text-gray-400 mt-1">
            Vulnerability Management
          </p>
        </div>
      </div>
    </div>
  );
};

export default VulnerabilitySidebar;
